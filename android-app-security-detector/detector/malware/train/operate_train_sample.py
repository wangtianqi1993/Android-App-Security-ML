# !/usr/bin/env python
# -*- coding: utf-8 -*-
__author__ = 'wtq'

import os
from datetime import datetime
import traceback
from detector.config import MALWARE_SOURCE
from detector.config import BENIGN_SOURCE
from detector.config import DETECTOR_DB_NAME
from detector.db.session import MongDBSession
from detector.logger import DetectorLogger
from detector.malware.train.feature import ExtractFeature

feature = ExtractFeature()
logger = DetectorLogger()


class OperateSample(object):
    """
    the class will save or get the benign or malware sample to mongo
    """

    def __init__(self):
        self.session = MongDBSession()

    def save_sample(self, apk_dir):
        """
        对apk中的源代码作分词，其中的词作为key，出现的次数作为value，存储到mongo中
        :param apk_dir:
        :return:
        """
        try:
            for dir in os.listdir(apk_dir):
                # 每遍历到一个目录就为一个app，将其源代码作为一条记录插到mongo中
                apk_dict = {}
                dir = os.path.join(apk_dir, dir)
                feature.scan_file(dir, apk_dict)
                logger.info(len(apk_dict))
                if len(apk_dict) > 500:
                    sample_train = {
                        "train-word": apk_dict,
                        "description": "this is the malware's source code word",
                        "create": datetime.now()
                    }
                    self.session.insert_one(BENIGN_SOURCE, sample_train)
        except Exception:
            traceback.print_exc()

if __name__ == "__main__":
    a = OperateSample()
    a.save_sample("/media/wtq/0001CADE0007CDD4/Apk/apk-resource/benign-resource")
